//package com.sxm.blog.admin.security;////import com.sxm.blog.admin.security.handler.LoginFailureHandler;//import com.sxm.blog.admin.security.handler.LoginSuccessHandler;//import com.sxm.blog.admin.security.handler.LogoutSuccessHandler;//import org.springframework.beans.factory.annotation.Autowired;//import org.springframework.beans.factory.annotation.Configurable;//import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;//import org.springframework.security.config.annotation.web.builders.HttpSecurity;//import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;//import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;/////**// * @author// * @description// * @date 2020/5/8// *///@Configurable//@EnableWebSecurity////开启 Spring Security 方法级安全注解 @EnableGlobalMethodSecurity//@EnableGlobalMethodSecurity(prePostEnabled = true, securedEnabled = true, jsr250Enabled = true)//public class BrowserSecurityConfig extends WebSecurityConfigurerAdapter {////    @Autowired//    private LoginFailureHandler failureHandler;////    @Autowired//    private LoginSuccessHandler successHandler;////    @Autowired//    private LogoutSuccessHandler loginoutHandler;////    @Override//    public void configure(HttpSecurity http) throws Exception {////        http.formLogin()//                .loginPage("/authentication/require") // 登录页面回调//                .successHandler(successHandler)// 认证成功回调//                .failureHandler(failureHandler)////                // 以下验证码的校验配置//                .and()//                .apply(validateCodeSecurityConfig)////                // 以下短信登录认证的配置//                .and()//                .apply(smsCodeAuthenticationSecurityConfig)////                // 记住我的配置//                .and()//                .rememberMe()//                .tokenRepository(persistentTokenRepository())//                .tokenValiditySeconds(3600) // 设置记住我的过期时间//                .userDetailsService(userDetailsService)////                .and()//                // 请求做授权配置//                .authorizeRequests()//                // 以下请求路径不需要认证//                .antMatchers("/authentication/require",//                        "/authentication/mobile",//                        "/login",//                        "/code/*",//                        "/")//                .permitAll()//                .anyRequest() // 任何请求//                .authenticated() // 都需要身份认证////                // 暂时将防护跨站请求伪造的功能置为不可用//                .and()//                .csrf().disable();//    }//}