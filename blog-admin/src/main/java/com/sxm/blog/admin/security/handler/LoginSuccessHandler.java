package com.sxm.blog.admin.security.handler;import com.sxm.blog.admin.entity.Menu;import com.sxm.blog.admin.entity.Role;import com.sxm.blog.admin.entity.User;import com.sxm.blog.admin.mapper.MenuMapper;import com.sxm.blog.admin.mapper.RoleMapper;import com.sxm.blog.admin.security.CustomAccessDeniedHandler;import com.sxm.blog.admin.utils.Results;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.security.core.Authentication;import org.springframework.security.core.authority.SimpleGrantedAuthority;import org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler;import org.springframework.stereotype.Component;import javax.servlet.ServletException;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.io.IOException;import java.util.Collection;import java.util.HashSet;import java.util.List;/** * @author 杨红岩 * @description 授权成功 * @date 2020/5/8 */@Slf4j@Componentpublic class LoginSuccessHandler extends SimpleUrlAuthenticationSuccessHandler {    @Autowired    private MenuMapper menuMapper;    @Autowired    private RoleMapper roleMapper;    @Override    public void onAuthenticationSuccess(HttpServletRequest request, HttpServletResponse response, Authentication authentication) throws IOException, ServletException {        log.info("Authentication success, {} login successfully", request.getParameter("username"));        Object principal = authentication.getPrincipal();        if (principal instanceof User) {            User user = (User) principal;            log.info("查询用户角色和菜单:{}", user.getId());            List<Role> roles = this.roleMapper.getByUserId(user.getId());            user.setUserRoles(roles);            List<Menu> menus = null;            // 填充权限            Collection<SimpleGrantedAuthority> authorities = new HashSet<SimpleGrantedAuthority>();            if (roles != null && roles.size() > 0) {                for (Role role : roles) {                    authorities.add(new SimpleGrantedAuthority(role.getRoleName()));                }                log.info("查询菜单:{}", roles);                menus = this.menuMapper.getByRoleIds(roles);                user.setRoleMenus(menus);            }            user.setAuthorities(authorities);        }        CustomAccessDeniedHandler.ControllerTools.print(response, Results.success(0, "登录成功", "登录成功").toJson());    }}