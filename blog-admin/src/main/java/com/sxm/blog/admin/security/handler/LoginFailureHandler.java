package com.sxm.blog.admin.security.handler;import com.sxm.blog.admin.exception.ValidateCodeException;import com.sxm.blog.admin.security.CustomAccessDeniedHandler;import com.sxm.blog.admin.utils.Results;import lombok.extern.slf4j.Slf4j;import org.springframework.security.authentication.BadCredentialsException;import org.springframework.security.core.AuthenticationException;import org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler;import org.springframework.stereotype.Component;import javax.servlet.ServletException;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.io.IOException;/** * @author 杨红岩 * @description 授权失败 * @date 2020/5/8 */@Slf4j@Componentpublic class LoginFailureHandler extends SimpleUrlAuthenticationFailureHandler {    @Override    public void onAuthenticationFailure(HttpServletRequest request, HttpServletResponse response, AuthenticationException exception) throws IOException, ServletException {        log.info("Authentication error, {} login failed，exception:{}", request.getParameter("username"), exception.getMessage());        //根据不同异常类型判断        if (exception instanceof ValidateCodeException) {            CustomAccessDeniedHandler.ControllerTools.print(response, Results.fail(-10, "登录失败", exception.getMessage()).toJson());        } else if (exception instanceof BadCredentialsException) {            CustomAccessDeniedHandler.ControllerTools.print(response, Results.fail(-20, "登录失败", "用户名或密码错误").toJson());        } else {            CustomAccessDeniedHandler.ControllerTools.print(response, Results.fail(-110, "登录失败", "用户名或密码错误").toJson());        }    }}